#!/bin/sh
#
# Copy-paste of the 'whid' script, but without the panel integration
#

file="/tmp/.minimized"
touch $file

case $1 in
hide)
    lines=$(wc -l < $file)

    # Arbitrary limit
    if [[ $lines -gt 9 ]]; then
        notify-send "Ten windows are already hidden" "A few are probably not needed. Close them." -i warning
    else
        focusedID=$(xdo id)
        focusedName=$(xdotool getwindowname $focusedID)

        # Hide the window
        echo "$focusedID $focusedName" >> $file && xdo hide $focusedID
    fi
;;
dmenu)
    miniList=$(cat $file)

    # Dmenu cannot draw more than 30 lines
    lines=$(wc -l < $file)
    if [[ $lines -gt 30 ]]
    then linesDisplayed=30
    else linesDisplayed=$lines
    fi

    # If the list is empty
    if [ -z "$miniList" ]
    then
        miniList=" Nothing is hidden!"
        linesDisplayed=1
    fi

    # Calculate where to draw the dmenu popup.
    # Comment that line if you use vanilla dmenu.
    yPos=$((410-$linesDisplayed*10))

    # Launch dmenu
    # Comment that line if you use vanilla dmenu, and not one patched with eye candy
    lineNumber=$(echo "$miniList" | cut -d " " -f 2- | nl -w 3 -n rn | sed -r 's/^([ 0-9]+)[ \t]*(.*)$/\1 - \2/' | dmenu -b -i -x 415 -y $yPos -w 450 -l $linesDisplayed -h 20 -fn 'Lucida Grande 8' -nb '#201F1D' -nf '#eddec9' -sb '#8F3724' -sf '#EDDEC9' -p 'Hidden:' | cut -d '-' -f -1)
    echo $lineNumber

    # If you use vanilla dmenu, enable the following line:
    #lineNumber=$(echo "$miniList" | cut -d " " -f 2- | dmenu -b -i -l $linesDisplayed | cut -d ' ' -f 1)

    # If you exited dmenu without selecting anything or if the list was empty
    [ -z "$lineNumber" -o "$miniList" = " Nothing is hidden!" ] && exit

    # Show the selected hidden window
    selectedID=$(sed -n "$lineNumber p" $file | cut -d ' ' -f 1)
    xdo show $selectedID && sed -i "${lineNumber}d" $file
;;
esac
